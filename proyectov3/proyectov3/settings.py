"""
Django settings for proyectov3 project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os


#Importación mensajes de error
from django.contrib.messages import constants as mensajes_de_error



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Build paths inside the project like this: BASE_DIR / 'subdir'.
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

"""
STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)
"""





# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(u#kjkr@sn57e&t9@(++lmna-gjk+-x6@v!nzp)2@a6qc)&q&u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    #Libreria Administración
    'jazzmin',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Apps
    'core.erp',
    'productos',
    'carro',
    'autenticacion',
    'pedidos',
    'usuarios',
    'reconocimiento',

    # Librerias
    'crispy_forms',
    'import_export',
    'axes',


]




# Jazzmin_Settings
JAZZMIN_SETTINGS = {
#Configuración Login

    # Titulo de la Ventana
    "site_title": "Explorer",

    # Titulo en la pantalla de login
    "site_header": "Explorer",

    # Welcome text on the login screen
    "welcome_sign": "Aréa Administrativa",

#Configuración Area Lateral

    # Titulo a la par del logo
    "site_brand": "Explorer",

#Footer
    # Copyright on the footer
    "copyright": "Explorer",

#General
    "site_logo": "adminlite/dist/img/LOGO2222.png",

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

    "login_logo": None,
    "site_icon": None,
    #"user_avatar": "adminlite/dist/img/LOGO2.png",

}

JAZZMIN_UI_TWEAKS = {
   
    "theme": "lumen",
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'proyectov3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'carro.context_processor.importe_total_carro',
            ],
        },
    },
]

WSGI_APPLICATION = 'proyectov3.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases


"""
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}
"""
"""
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "db",
        "USER": "postgres",
        "PASSWORD": "postsql22",
        "HOST": "localhost",
        "DATABASE_PORT": "5432"
    }
}
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': os.environ.get('DB_HOST'),
        #'PORT': '5432', 
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'es-eu'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = '/code/static'

STATICFILES_DIRS = [ BASE_DIR / "static" ]


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



#Crispy a Bootstrap
CRISPY_TEMPLATE_PACK='bootstrap4'

#Tags de Mensajes

MESSAGE_TAGS = {

    mensajes_de_error.DEBUG: 'debug',
    mensajes_de_error.INFO: 'info',
    mensajes_de_error.SUCCESS: 'success',
    mensajes_de_error.WARNING: 'warning',
    mensajes_de_error.ERROR: 'danger',

}


#Configuración Mail
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "tiendaexplorer2022@gmail.com"        #####Correo desde el que se enviaran los correos, tambien corregir en autenticacion > views > enviar_correo
EMAIL_HOST_PASSWORD = "wyklukcpzkdowiqg"                 #####Clave generada en el correo

#Configuración Axes

AUTHENTICATION_BACKENDS = [
    # AxesStandaloneBackend should be the first backend in the AUTHENTICATION_BACKENDS list.
    'axes.backends.AxesStandaloneBackend',

    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'axes.middleware.FailedLoginMiddleware',
    'axes.middleware.AxesMiddleware',
]


#Configuración Axes
AXES_FAILURE_LIMIT = 10
AXES_LOCKOUT_CALLABLE = "autenticacion.views.lockout" #Referencia Vista de Autenticacon
AXES_ONLY_USER_FAILURES	= True

CSRF_TRUSTED_ORIGINS = ['http://localhost:8000']
